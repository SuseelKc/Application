@page "/coffee"
@inject NavigationManager Navigation
@using QuestPDF.Fluent;
@using QuestPDF.Fluent;
@using QuestPDF.Helpers;
@using QuestPDF.Infrastructure;

<h3>Coffee</h3>

<EditForm Model="@coffees">
    <div>
        <!-- ... -->
        <label class="form-label">Coffee Name</label>
        <input type="text" class="form" id="coffee" @bind="coffees.CoffeeName" />
        <br><br>
     
        <label class="form-label">Price</label>
        <input type="number" class="form" id="price" @bind="coffees.Price" />
        <!-- ... -->
        <button class="btn btn-primary" @onclick="Add">Save</button>
        <div class="d-flex justify-content-end"><button class="btn btn-success" @onclick="SavePDF">Generate PDF</button></div>
    </div>
</EditForm>
<br>
<br>
<table class="table table-bordered">
    <thead>
        <tr>
            <td>Id</td>
            <td>Coffee</td>
          
            <td>Price</td>
            <td>Action</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in coffee)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.CoffeeName</td>
              
                <td>@item.Price</td>
                <td><button class="btn btn-danger" @onclick="() => Delete(item.Id)">Delete</button></td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<CoffeeShop.Models.Coffee> coffee { get; set; }

    private CoffeeShop.Models.Coffee coffees = new();

    protected override void OnInitialized()
    {
        coffee = CoffeeService.GetAll();
    }

    private void Add()
    {
        if (string.IsNullOrWhiteSpace(coffees.CoffeeName))
        {
            return;
        }
        coffees.Id = coffee.Count + 1;
        CoffeeService.AddCoffee(coffees.Id, coffees.CoffeeName, coffees.Price);

        coffees = new();
        coffee = CoffeeService.GetAll();

    }

    private void Delete(int Id)
    {
        CoffeeService.DeleteCoffee(Id);
        coffee = CoffeeService.GetAll();
    }

    private void SavePDF()
    {
        coffee = CoffeeService.GetAll();

        if (coffee!= null)
        {
            
                var appPath = Utils.GetAppDirectoryPath();
                Document.Create(container =>
                {
                    container.Page(page =>
                    {
                        page.Size(PageSizes.A4);
                        page.Margin(1, Unit.Centimetre);
                        page.PageColor(Colors.White);
                        page.DefaultTextStyle(x => x.FontSize(15));

                        page.Header().Text("Bislerium café -- Coffee Types ");
                     

                        page.Content().Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                columns.RelativeColumn();
                                
                            });

                            table.Header(header =>
                            {
                                header.Cell().Text("SNo.");
                                header.Cell().Text("Coffee");
                            
                                header.Cell().Text("Coffee Price");
                             
                            });

                            int index = 1;
                                foreach (var item in coffee)
                            {
                                table.Cell().Text(index.ToString());
                                table.Cell().Text(item.CoffeeName);
                                                          
                                table.Cell().Text(item.Price.ToString());
                                index++;
                            }

                         
                        });

                        page.Footer().Text(text =>
                        {
                            text.Span("Page :");
                            text.CurrentPageNumber();
                        });
                    });
                }).GeneratePdf(Path.Combine(appPath, "Coffee Types.pdf"));
            
        }
        }
    }


